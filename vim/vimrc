" All system-wide defaults are set in $VIMRUNTIME/archlinux.vim (usually just
" /usr/share/vim/vimfiles/archlinux.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vimrc), since archlinux.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing archlinux.vim since it alters the value of the
" 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages.
"runtime! archlinux.vim

" If you prefer the old-style vim functionalty, add 'runtime! vimrc_example.vim'
" Or better yet, read /usr/share/vim/vim80/vimrc_example.vim or the vim manual
" and configure vim to your own liking!

" do not load defaults if ~/.vimrc is missing
"let skip_defaults_vim=1
let mapleader = "\<Space>"

set relativenumber
set number
set smartcase
syntax on
color habamax
set termguicolors
"color default
" Set cursor to be slim in insert mode
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

" Set tab settings
set tabstop=2
set shiftwidth=2
set expandtab

set complete+=kspell
set completeopt=menu,menuone

set gp=git\ grep\ -n

set fillchars=vert:\â”‚,fold:\-,eob:\~,lastline:\@
highlight VertSplit ctermfg=white ctermbg=NONE guifg=#444444 guibg=NONE

" Set background color
highlight Normal ctermbg=NONE guibg=NONE  " Replace with your desired color

nnoremap <C-w>v <C-w>v<C-w>w

" Move current selected code down
vnoremap J :m '>+1<CR>gv=gv<CR>
" Move current selected code up
vnoremap K :m '<-2<CR>gv=gv<CR>
" When pressing J make sure the view doesn't move
nnoremap J mzJ`z
" Center the view when going up
nnoremap <C-u> <C-u>zz
" Center the view when going down
nnoremap <C-d> <C-d>zz
" Center the view when searching (next)
nnoremap n nzzzv
" Center the view when searching (previous)
nnoremap N Nzzzv
" Fix paste buffer when pasting over something
xnoremap p "_dP
" Copy into system clipboard
vnoremap <space>y "+y
" Make sure they are the same
nnoremap <C-c> <Esc>
" Split line at cursor in half
nnoremap s d$o<Esc>p


" Function to toggle the directory listing
function! ToggleDirList()
    if exists("t:dirlist_open") && t:dirlist_open
        " If the directory list is open, close it
        :bdelete
        unlet t:dirlist_open
    else
        " If the directory list is not open, open it
        :E
        let t:dirlist_open = 1
    endif
endfunction

" Map Ctrl-n to the toggle function
nnoremap <C-n> :call ToggleDirList()<CR>:<CR>

nnoremap <leader>f :Files<CR>

call plug#begin('~/.vim/plugged')

" FZF plugin
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

call plug#end()

